{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport function SettingsScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getData = function getData() {\n    var response, json;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.sampleapis.com/rickandmorty/characters\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json);\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  function handleHomePress() {\n    navigation.navigate(\"Home\");\n  }\n\n  return React.createElement(View, {\n    style: styles.screen\n  }, React.createElement(Text, null, \"The Settings Screen!\"), React.createElement(Button, {\n    title: \"Go to the Home screen!\",\n    onPress: handleHomePress\n  }));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Student/Documents/fantunovic/vjezbaKol2/screens/SettingsScreen.js"],"names":["React","useState","useEffect","SettingsScreen","route","navigation","isLoading","setLoading","data","setData","getData","fetch","response","json","handleHomePress","navigate","styles","screen","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAGA,OAAO,SAASC,cAAT,OAA+C;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAEpD,kBAA+BJ,QAAQ,CAAC,IAAD,CAAvC;AAAA;AAAA,MAAMK,SAAN;AAAA,MAAiBC,UAAjB;;AACA,mBAAuBN,QAAQ,CAAC,EAAD,CAA/B;AAAA;AAAA,MAAMO,IAAN;AAAA,MAAYC,OAAZ;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEWC,KAAK,CAAC,oDAAD,CAFhB;;AAAA;AAENC,YAAAA,QAFM;AAAA;AAAA,6CAGOA,QAAQ,CAACC,IAAT,EAHP;;AAAA;AAGNA,YAAAA,IAHM;AAIZJ,YAAAA,OAAO,CAACI,IAAD,CAAP;AAJY;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUA,WAASC,eAAT,GAA2B;AACzBT,IAAAA,UAAU,CAACU,QAAX,CAAoB,MAApB;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD,+BADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,wBAAd;AAAuC,IAAA,OAAO,EAAEH;AAAhD,IAFF,CADF;AAMD;AAED,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AACNG,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,cAAc,EAAE;AAHV;AADuB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { View, Text, Button, StyleSheet, TouchableOpacity } from \"react-native\";\n\nexport function SettingsScreen({ route, navigation }) {\n  \n  const[isLoading, setLoading] = useState(true);\n  const[data, setData] = useState([]);\n\n  const getData = async () => {\n    try {\n      const response = await fetch(\"https://api.sampleapis.com/rickandmorty/characters\")\n      const json = await response.json()\n      setData(json)\n    } catch (error) {\n      \n    }\n  } \n  \n  function handleHomePress() {\n    navigation.navigate(\"Home\");\n  }\n  return (\n    <View style={styles.screen}>\n      <Text>The Settings Screen!</Text>\n      <Button title=\"Go to the Home screen!\" onPress={handleHomePress} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}