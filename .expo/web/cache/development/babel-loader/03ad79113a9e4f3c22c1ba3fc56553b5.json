{"ast":null,"code":"import * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { HomeScreen } from \"../screens/HomeScreen\";\nimport { SettingsScreen } from \"../screens/SettingsScreen\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nvar Stack = createStackNavigator();\nexport function MyStack() {\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: \"Home screen\"\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      title: \"Settings screen\"\n    }\n  })));\n}\nvar Tab = createBottomTabNavigator();\nexport function TabNavigator() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Settings\") {\n            iconName = focused ? \"settings\" : \"settings-outline\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"green\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      headerTitle: \"HOME\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        fontSize: 25,\n        paddingBottom: 5,\n        color: \"#1f4d29\"\n      },\n      headerStyle: {\n        borderBottomColor: \"gray\",\n        borderBottomWidth: 0.2,\n        shadowColor: \"transparent\"\n      },\n      title: \"HOME\",\n      tabBarStyle: {\n        paddingTop: 5\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      headerTitle: \"SETTINGS\",\n      headerTitleStyle: {\n        fontWeight: \"bold\",\n        fontSize: 25,\n        paddingBottom: 5,\n        color: \"#1f4d29\"\n      },\n      headerStyle: {\n        borderBottomColor: \"gray\",\n        borderBottomWidth: 0.2,\n        shadowColor: \"transparent\"\n      },\n      title: \"SETTINGS\",\n      tabBarStyle: {\n        paddingTop: 5\n      }\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Student/Documents/fantunovic/vjezbaKol2/navigation/navigator.js"],"names":["React","NavigationContainer","createStackNavigator","HomeScreen","SettingsScreen","createBottomTabNavigator","Ionicons","Stack","MyStack","title","Tab","TabNavigator","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerTitle","headerTitleStyle","fontWeight","fontSize","paddingBottom","headerStyle","borderBottomColor","borderBottomWidth","shadowColor","tabBarStyle","paddingTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { HomeScreen } from \"../screens/HomeScreen\";\nimport { SettingsScreen } from \"../screens/SettingsScreen\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nconst Stack = createStackNavigator();\n\nexport function MyStack() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{ title: \"Home screen\" }}\n        />\n        <Stack.Screen\n          name=\"Settings\"\n          component={SettingsScreen}\n          options={{ title: \"Settings screen\" }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport function TabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Settings\") {\n            iconName = focused ? \"settings\" : \"settings-outline\";\n          }\n\n          // You can return any component that you like here!\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: \"green\",\n        tabBarInactiveTintColor: \"gray\",\n      })}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          headerTitle: \"HOME\",\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n            fontSize: 25,\n            paddingBottom: 5,\n            color: \"#1f4d29\",\n          },\n          headerStyle: {\n            borderBottomColor: \"gray\",\n            borderBottomWidth: 0.2,\n            shadowColor: \"transparent\",\n          },\n          title: \"HOME\",\n          tabBarStyle: {\n            paddingTop: 5,\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          headerTitle: \"SETTINGS\",\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n            fontSize: 25,\n            paddingBottom: 5,\n            color: \"#1f4d29\",\n          },\n          headerStyle: {\n            borderBottomColor: \"gray\",\n            borderBottomWidth: 0.2,\n            shadowColor: \"transparent\",\n          },\n          title: \"SETTINGS\",\n          tabBarStyle: {\n            paddingTop: 5,\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}